import matplotlib.pyplot as pltimport pandas as pddef read_json_file_to_dataframe(input_file:str) -> pd.DataFrame:    """    Read the data from a JSON file into a Pandas dataframe.    Clean the data by removing any incomplete rows and sort by date    Args:        input_file (str): The path to the JSON file.    Returns:        eva_df (pd.DataFrame): The cleaned and sorted data as a dataframe structure    """    print('Reading the following json file: ', input_file)    eva_df = pd.read_json(input_file, convert_dates=['date'])    eva_df['eva'] = eva_df['eva'].astype(float)    eva_df.dropna(axis=0, inplace=True)    eva_df.sort_values('date', inplace=True)    return eva_dfdef write_dataframe_to_csv(eva_df: pd.DataFrame, output_file: str) -> None:    """    Saving a dataframe to a csv file.    Args:        eva_df (pd.DataFrane): the dataframe to save        output_file (str): the location where the dataframe is saved    Returns:        None    """    print('Saving to ', output_file)    eva_df.to_csv(output_file, index=False)print("--START--")# Data source: https://data.nasa.gov/resource/eva.json (with modifications)input_file = open('./eva-data.json', 'r')output_file = open('./eva-data.csv', 'w')graph_file = './cumulative_eva_graph.png'eva_df = read_json_file_to_dataframe(input_file)write_dataframe_to_csv(eva_df, output_file)print(f'Plotting cumulative spacewalk duration and saving to {graph_file}')# calculate the total time of the eva experimenteva_df['duration_hours'] = eva_df['duration'].str.split(":").apply(lambda x: int(x[0]) + int(x[1])/60) # duration is in hh:mmeva_df['cumulative_time'] = eva_df['duration_hours'].cumsum()#visualize the total time per eva experimentplt.plot(eva_df['date'], eva_df['cumulative_time'], 'ko-')plt.xlabel('Year')plt.ylabel('Total time spent in space to date (hours)')plt.tight_layout()plt.savefig(graph_file)plt.show()print("--END--")